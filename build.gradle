import static org.owasp.dependencycheck.reporting.ReportGenerator.Format.HTML
import static org.owasp.dependencycheck.reporting.ReportGenerator.Format.JSON

buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.0'

    // Auto Update Versions
    id 'se.patrikerdes.use-latest-versions' version '0.2.18'
    id 'com.github.ben-manes.versions' version '0.44.0'

    // Auto Release
    id('net.researchgate.release') version '3.0.2'

    // Linting
    id 'checkstyle'
    id 'pmd'
    id 'com.github.spotbugs' version '5.0.13'
    id 'org.owasp.dependencycheck' version '7.4.0'
}

allprojects {
    group = 'com.raynigon.unit-api'
    // version = project.version
    sourceCompatibility = JavaLanguageVersion.of(17)
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'maven-publish'
    apply plugin: 'jacoco'
    apply plugin: 'signing'
    apply plugin: 'net.researchgate.release'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'
    apply plugin: 'com.github.spotbugs'

    sourceCompatibility = JavaLanguageVersion.of(17)
    targetCompatibility = JavaLanguageVersion.of(17)
    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'


    apply from: "$rootDir/gradle/scripts/versionClass.gradle"
    apply from: "$rootDir/gradle/scripts/javadoc.gradle"
    apply from: "$rootDir/gradle/scripts/test.gradle"
    apply from: "$rootDir/gradle/scripts/publishing.gradle"

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
        archiveClassifier.set("")
    }

    sourceSets {
        main {
            java.srcDirs += "build/generated/sources/version/java"
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.24'
        implementation 'javax.measure:unit-api:2.1.3'
        implementation 'org.apache.commons:commons-lang3:3.12.0'
        implementation 'org.slf4j:slf4j-api:2.0.5'
        implementation 'org.jetbrains:annotations:23.1.0'
        annotationProcessor 'org.projectlombok:lombok:1.18.22'

        testCompileOnly 'org.projectlombok:lombok:1.18.22'
        testImplementation 'org.apache.groovy:groovy:4.0.6'
        testImplementation 'org.spockframework:spock-core:2.4-M1-groovy-4.0'
        testRuntimeOnly "net.bytebuddy:byte-buddy:1.12.19"
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    }


    tasks.withType(Checkstyle) {
        configFile = new File(rootProject.projectDir, "gradle/config/checkstyle.xml")
        reports {
            xml.required = true
            html.required = true
        }
    }


    pmd {
        consoleOutput = true
        ignoreFailures = true
        toolVersion = "6.41.0"
        rulesMinimumPriority = 3
    }

    spotbugs {
        ignoreFailures = true
    }

    dependencyCheck {
        autoUpdate = false
        cveValidForHours = 1
        skipTestGroups = true
        suppressionFile = "${parent.projectDir}/gradle/config/dependency-check-suppression.xml"
        formats = [JSON, HTML]

        analyzers.nodeEnabled = false
        analyzers.nuspecEnabled = false
        analyzers.nugetconfEnabled = false
        analyzers.assemblyEnabled = false
        analyzers.retirejs.enabled = false
    }
}

bootJar {
    enabled = false
}

apply from: "$rootDir/gradle/scripts/updateMkdocsConfig.gradle"
apply from: "$rootDir/gradle/scripts/release.gradle"
